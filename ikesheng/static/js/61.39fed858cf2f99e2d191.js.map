{"version":3,"sources":["webpack:///src/views/HelloWorld.vue","webpack:///./src/views/HelloWorld.vue?0cf3","webpack:///./src/views/HelloWorld.vue"],"names":["HelloWorld","data","label","children","defaultProps","id","isLeaf","activeData","treeExpandedKeys","treeKey","nodeQuery","name","isShowDlg","methods","append","this","editType","remove","node","_this","removeNode","then","re","result","success","renderTree","$message","showClose","type","message","edit","appendCallback","_this2","parentId","addNode","editCallback","_this3","editNode","Date","treeExpand","self","push","treeCollapse","index","indexOf","splice","sure","_this4","$refs","validate","valid","console","log","reset","views_HelloWorld","render","_vm","_h","$createElement","_c","_self","key","ref","attrs","node-key","props","default-expanded-keys","expand-on-click-node","on","node-expand","node-collapse","scopedSlots","_u","fn","staticClass","_v","_s","effect","content","placement","click","top","title","visible","width","update:visible","$event","inline","label-width","model","size","prop","placeholder","value","callback","$$v","$set","expression","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/61.39fed858cf2f99e2d191.js","sourcesContent":["<template>\n  <article>\n    <el-tree\n      ref=\"tree\"\n      node-key=\"id\"\n      :key=\"treeKey\"\n      :data=\"data\"\n      :props=\"defaultProps\"\n      :default-expanded-keys=\"treeExpandedKeys\"\n      :expand-on-click-node=\"false\"\n\n      @node-expand=\"treeExpand\"\n      @node-collapse=\"treeCollapse\">\n        <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span>{{ node.label }}</span>\n            <span class=\"custom__tree__icons\">\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"新增\" placement=\"top\">\n                    <i class=\"tree-icon el-icon-plus\" @click=\"() => append(data)\"></i>\n                </el-tooltip>\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"编辑\" placement=\"top\">\n                    <i class=\"tree-icon el-icon-edit\" @click=\"() => edit(node, data)\"></i>\n                </el-tooltip>\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"删除\" placement=\"top\">\n                    <i class=\"tree-icon el-icon-close\" @click=\"() => remove(node, data)\"></i>\n                </el-tooltip>\n            </span>\n        </span>\n    </el-tree>\n    <el-dialog top=\"5vh\" class=\"dialog\" title=\"新增子节点\" :visible.sync=\"isShowDlg\" width=\"500px\"\n               >\n      <el-form :inline=\"true\" label-width=\"120px\" ref=\"nodeQuery\"\n               :model=\"nodeQuery\" size=\"small\" class=\"demo-form-inline\">\n        <el-form-item label=\"子节点名称\" prop=\"name\">\n          <el-input placeholder=\"请输入子节点名称\" v-model=\"nodeQuery.name\"></el-input>\n        </el-form-item>\n        <el-form-item class=\"btns__adjust\">\n          <el-button size=\"medium\" type=\"primary\" @click=\"sure\">确定</el-button>\n          <el-button size=\"medium\" @click=\"reset\">取消</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </article>\n</template>\n\n\n<script>\n  export default {\n    data() {\n      return {\n        // data: [], // tree数据源\n        data: [{\n          label: '一级 1',\n          children: [{\n            label: '二级 1-1',\n            children: [{\n              label: '三级 1-1-1'\n            }]\n          }]\n        }, {\n          label: '一级 2',\n          children: [{\n            label: '二级 2-1',\n            children: [{\n              label: '三级 2-1-1'\n            }]\n          }, {\n            label: '二级 2-2',\n            children: [{\n              label: '三级 2-2-1'\n            }]\n          }]\n        }, {\n          label: '一级 3',\n          children: [{\n            label: '二级 3-1',\n            children: [{\n              label: '三级 3-1-1'\n            }]\n          }, {\n            label: '二级 3-2',\n            children: [{\n              label: '三级 3-2-1'\n            }]\n          }]\n        }],\n        defaultProps: { // 树相关属性设置\n          id: \"\",\n          children: \"childList\",\n          label: \"name\",\n          isLeaf: 'leaf'\n        },\n        activeData: null,   // 当前操作数据\n        treeExpandedKeys: [],   // 记录打开节点的数组\n        treeKey: '',    // 控制tree渲染的key\n        nodeQuery: {\n          name: ''    // 编辑树节点表单的model\n        },\n        isShowDlg: false    // 是否显示编辑节点弹框\n      };\n    },\n    methods: {\n      // 加载树\n      // loadTreeNode(node, resolve) {\n      //   const id = node ? node.data.id : '';\n      //   getTreeData({id}).then(re => {\n      //     const result = re.data;\n      //     const treeData = result.data;\n      //     if (result.success && node.level === 0) {\n      //       // 如果是第一次加载数据，直接返回数据\n      //       resolve(treeData);\n      //     } else if(result.success) {\n      //       // 如果非第一次加载数据，将返回数据拼接到操作节点的childList属性中\n      //       node.data.childList = treeData;\n      //       resolve(treeData);\n      //     } else {\n      //       resolve([]);\n      //       this.$message({\n      //         type: 'error',\n      //         message: '加载数据出错！'\n      //       });\n      //     }\n      //   });\n      // },\n\n      // 新增节点\n      append(data) {\n        this.editType = \"ADD\";\n        this.isShowDlg = true;\n        // 记录当前节点数据，供新增弹框关闭后回调用\n        this.activeData = data;\n      },\n\n      // 移除节点\n      remove(node, data) {\n        removeNode(data.id).then(re => {\n          const result = re.data;\n          if (result && result.success) {\n            // 重新渲染tree\n            this.renderTree();\n            this.$message({\n                showClose: true,\n              type: \"success\",\n              message: \"删除成功!\"\n            });\n          }\n        });\n      },\n\n      // 编辑节点\n      edit(node, data) {\n        this.nodeQuery.name = data.name;\n        // 记录当前操作数据\n        this.activeData = data;\n        this.editType = \"EDIT\";\n        this.isShowDlg = true;\n      },\n\n      // 新增节点回调函数\n      appendCallback() {\n        const data = this.activeData;\n        const nodeQuery = this.nodeQuery;\n        nodeQuery.parentId = data.id === '0' ? '' : data.id;\n        // 将新节点名称和父节点id传递到后台\n        addNode(nodeQuery).then(re => {\n          this.renderTree();\n        });\n      },\n\n      // 编辑节点回调函数\n      editCallback() {\n        const data = this.activeData,\n          nodeQuery = this.nodeQuery;\n        data.name = nodeQuery.name;\n        // 将节点新名称和节点id传递到后台\n        editNode(data).then(re => {\n          const result = re.data;\n          if (result && result.success) {\n            this.$message({\n                showClose: true,\n              type: \"success\",\n              message: \"修改成功！\"\n            });\n            this.renderTree();\n          }\n        });\n      },\n\n      // 刷新key值，重新渲染tree\n      renderTree() {\n        this.treeKey = +new Date();\n      },\n\n      // 当节点打开时，记录下打开节点的id\n      treeExpand(data, node, self) {\n        this.treeExpandedKeys.push(data.id);\n      },\n\n      // 当节点关闭时，移除节点的id\n      treeCollapse(data) {\n        const index = treeExpandedKeys.indexOf(data.id);\n        if (index > -1) {\n          this.treeExpandedKeys.splice(index, 1);\n        }\n      },\n\n      // tree noed 新增/编辑确定事件\n      sure() {\n        const editType = this.editType;\n        this.$refs[\"parentNodeQuery\"].validate(valid => {\n        if (valid) {\n          editType === \"ADD\" ? this.appendCallback() : this.editCallback();\n          this.reset();\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n  },\n\n      // tree node 弹框取消事件\n      reset() {\n        this.activeData = null;\n        this.isShowDlg = false;\n        this.nodeQuery = {\n          name: \"\",\n          parentId: \"\"\n        };\n        this.editType = \"ADD\";\n      }\n    }\n  };\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/HelloWorld.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('article',[_c('el-tree',{key:_vm.treeKey,ref:\"tree\",attrs:{\"node-key\":\"id\",\"data\":_vm.data,\"props\":_vm.defaultProps,\"default-expanded-keys\":_vm.treeExpandedKeys,\"expand-on-click-node\":false},on:{\"node-expand\":_vm.treeExpand,\"node-collapse\":_vm.treeCollapse},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar node = ref.node;\nvar data = ref.data;\nreturn _c('span',{staticClass:\"custom-tree-node\"},[_c('span',[_vm._v(_vm._s(node.label))]),_vm._v(\" \"),_c('span',{staticClass:\"custom__tree__icons\"},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"新增\",\"placement\":\"top\"}},[_c('i',{staticClass:\"tree-icon el-icon-plus\",on:{\"click\":function () { return _vm.append(data); }}})]),_vm._v(\" \"),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"编辑\",\"placement\":\"top\"}},[_c('i',{staticClass:\"tree-icon el-icon-edit\",on:{\"click\":function () { return _vm.edit(node, data); }}})]),_vm._v(\" \"),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"删除\",\"placement\":\"top\"}},[_c('i',{staticClass:\"tree-icon el-icon-close\",on:{\"click\":function () { return _vm.remove(node, data); }}})])],1)])}}])}),_vm._v(\" \"),_c('el-dialog',{staticClass:\"dialog\",attrs:{\"top\":\"5vh\",\"title\":\"新增子节点\",\"visible\":_vm.isShowDlg,\"width\":\"500px\"},on:{\"update:visible\":function($event){_vm.isShowDlg=$event}}},[_c('el-form',{ref:\"nodeQuery\",staticClass:\"demo-form-inline\",attrs:{\"inline\":true,\"label-width\":\"120px\",\"model\":_vm.nodeQuery,\"size\":\"small\"}},[_c('el-form-item',{attrs:{\"label\":\"子节点名称\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入子节点名称\"},model:{value:(_vm.nodeQuery.name),callback:function ($$v) {_vm.$set(_vm.nodeQuery, \"name\", $$v)},expression:\"nodeQuery.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"btns__adjust\"},[_c('el-button',{attrs:{\"size\":\"medium\",\"type\":\"primary\"},on:{\"click\":_vm.sure}},[_vm._v(\"确定\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"medium\"},on:{\"click\":_vm.reset}},[_vm._v(\"取消\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7461425e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/HelloWorld.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7461425e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!px2rem-loader?{\\\"remUnit\\\":54}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HelloWorld.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7461425e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HelloWorld.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7461425e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/HelloWorld.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}